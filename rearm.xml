<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>

<muclient>
<plugin
   name="Rearm"
   author="Areia"
   id="0514dae1a55d59f19d19be7c"
   language="Lua"
   purpose="Rewield disarmed weapons"
   save_state="n"
   date_written="2020-12-15 04:00:00"
   requires="5.07"
   version="1.10"
   >
<description trim="y">
<![CDATA[
]]>
</description>

</plugin>

<include name="constants.lua"/>



<aliases>
    <alias
     match="^rearm\s+update$"
     enabled="y"
     script="update_plugin"
     regexp="y"
     ignore_case="y"
     sequence="100"
    >
    </alias>
</aliases>



<triggers>
    <trigger
     group="Trigger_Group_Rearm"
     match="^\{invmon\}1,(?<objid>\d+),-1,(?<wearloc>-?\d+)\n.+? DISARMS you and you struggle not to drop your weapon!\Z"
     enabled="n"
     send_to="12"
     regexp="y"
     multi_line="y"
     lines_to_match="2"
     sequence="100"
    >
    <send>
        rearm("%&lt;objid&gt;", "%&lt;wearloc&gt;", false)
    </send>
    </trigger>
    <trigger
     group="Trigger_Group_Rearm"
     match="^\{invmon\}1,(?<objid>\d+),-1,(?<wearloc>-?\d+)\n.+? DISARMS you and sends your .+? flying!\n\{invmon\}3,\k<objid>,-1,-1\Z"
     enabled="n"
     send_to="12"
     regexp="y"
     multi_line="y"
     lines_to_match="3"
     sequence="100"
    >
    <send>
        rearm("%&lt;objid&gt;", "%&lt;wearloc&gt;", true)
    </send>
    </trigger>
    
    <trigger
     group="Trigger_Group_Rearm"
     match="^Pearza of the Dark Eight creates a terrifying illusion!\nYour weapon has turned to fire!  IT BURNS!\nScreaming in agony, you throw the weapon down!\n\{invmon\}1,(?<objid>\d+),-1,(?<wearloc>-?\d+)\Z"
     enabled="n"
     send_to="12"
     regexp="y"
     multi_line="y"
     lines_to_match="4"
     sequence="100"
    >
    <send>
        rearm("%&lt;objid&gt;", "%&lt;wearloc&gt;", false)
    </send>
    </trigger>
    
    <trigger
     group="invmon"
     match="^\{invmon\}.+$"
     enabled="y"
     regexp="y"
     omit_from_output="y"
     keep_evaluating="y"
     sequence="99"
    >
    </trigger>
</triggers>



<script>
<![CDATA[
require "gmcphelper"

state = -1

WEARLOC = {
    ["0"] = "light", ["1"] = "head", ["2"] = "eyes",
    ["3"] = "lear", ["4"] = "rear", ["5"] = "neck1",
    ["6"] = "neck2", ["7"] = "back", ["8"] = "medal1",
    ["9"] = "medal2", ["10"] = "medal3", ["11"] = "medal4",
    ["12"] = "torso", ["13"] = "body", ["14"] = "waist",
    ["15"] = "arms", ["16"] = "lwrist", ["17"] = "rwrist",
    ["18"] = "hands", ["19"] = "lfinger", ["20"] = "rfinger",
    ["21"] = "legs", ["22"] = "feet", ["23"] = "shield",
    ["24"] = "wielded", ["25"] = "second", ["26"] = "hold",
    ["27"] = "float", ["30"] = "above", ["31"] = "portal",
    ["32"] = "sleeping"
}

function rearm(objid, wearloc, get)
    if (get) then
        SendNoEcho("get " .. objid)
    end
    -- Convert wearloc value to a string to be used in the command
    wearloc = WEARLOC[wearloc] and " " .. WEARLOC[wearloc] or ""
    SendNoEcho("wear " .. objid .. wearloc)
end

function on_state_change(prev, curr)
    if (curr == 8) then -- entered combat
        EnableTriggerGroup("Trigger_Group_Rearm", true)
        -- We have to manually send this to update config data clientside.
        -- OnPluginBroadcast handles the response. Note: maybe we should just
        -- trigger on invmon enable/disable messages and call it a day?
        Send_GMCP_Packet("config invmon")
    elseif (prev == 8) then -- left combat
        EnableTriggerGroup("Trigger_Group_Rearm", false)
    end
end

function invmon_disabled()
    ColourNote("red", "black", "WARNING: ", "silver", "", "Invmon is required for your rearming plugin to work!")
    ColourNote("silver", "black", "Submit ", "yellow", "", "invmon", "silver", "", " to enable it.")
end

-- Update code courtesy of Crowley
function update_plugin(alias, line, wc)
    raw = "https://raw.githubusercontent.com/AreiaAard/Rearm/master/rearm.xml"
    async_ok, async = pcall (require, "async")
    if async_ok then
        plugin_page = async.doAsyncRemoteRequest(raw, raw_get, "HTTPS")
    else
        ColourNote("white", "blue", "Error on plugin update!")
    end
end

function raw_get(retval, page, status, headers, full_status, request_url)
    local PLUGIN_NAME = GetPluginInfo(GetPluginID(), 1)
    local PLUGIN_VERSION = GetPluginInfo(GetPluginID(), 19)
    if status == 200 then
        raw_version = tonumber(string.match(page, '%s%s+version="([0-9%.]+)"'))
    end
    if raw_version == PLUGIN_VERSION then
        ColourNote("white", "blue", PLUGIN_NAME .. " is up-to-date.")
    elseif raw_version > PLUGIN_VERSION then
        ColourNote("white", "blue", "Updating " .. PLUGIN_NAME .. " from version " .. PLUGIN_VERSION .. " to " .. raw_version .. ". Do not touch anything!")
        local file = io.open(GetPluginInfo(GetPluginID(), 6), "w")
        file:write(page)
        file:close()
    end
    raw_version = nil
    if "" == GetAlphaOption("script_prefix") then
        SetAlphaOption("script_prefix", "\\\\\\")
    end
    Execute(GetAlphaOption("script_prefix") .. "DoAfterSpecial(1, \"ReloadPlugin('" .. GetPluginID() .. "')\", sendto.script)")
    ColourNote("white", "blue", "Update complete!")
end -- end Update code



--------------------------------------------------
-- Plugin Callbacks
--------------------------------------------------

function OnPluginEnable()
end

function OnPluginConnect()
    -- Make sure char info is updated ASAP.
    Send_GMCP_Packet("request char")
    -- We have to manually send this to update the config data clientside.
    -- OnPluginBroadcast catches the response.
    Send_GMCP_Packet("config invmon")
end

function OnPluginInstall()
    OnPluginEnable()
    if (IsConnected()) then
        OnPluginConnect()
    end
end

function OnPluginDisable()
end

function OnPluginClose()
    OnPluginDisable()
end

function OnPluginBroadcast(msg, id, name, text)
    if (id == "3e7dedbe37e44942dd46d264") then -- GMCP handler
        if (text == "char.status") then
            local prev = state
            state = tonumber(gmcp("char.status.state"))
            if (prev ~= state) then
                on_state_change(prev, state)
            end
        elseif (text == "config.invmon") then
            if (gmcp("config.invmon") == "NO") then
                invmon_disabled()
            end
        end
    end
end -- OnPluginBroadcast
]]>
</script>


</muclient>
